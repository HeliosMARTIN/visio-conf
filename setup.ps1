# Script de d√©marrage interactif pour MMI-VisioConf (Windows PowerShell)
# Ce script propose un choix entre Docker et installation locale

Write-Host "üé• Installation et d√©marrage de MMI-VisioConf" -ForegroundColor Cyan
Write-Host "===============================================" -ForegroundColor Cyan
Write-Host ""
Write-Host "Choisissez votre m√©thode d'installation :" -ForegroundColor Yellow
Write-Host ""
Write-Host "1Ô∏è‚É£  Docker (Recommand√© - Plus simple)" -ForegroundColor Green
Write-Host "    ‚úÖ Installation automatique de toutes les d√©pendances"
Write-Host "    ‚úÖ MongoDB inclus et configur√©"
Write-Host "    ‚úÖ Environnement isol√© et reproductible"
Write-Host ""
Write-Host "2Ô∏è‚É£  Installation locale" -ForegroundColor Blue
Write-Host "    üîß N√©cessite Node.js et MongoDB install√©s"
Write-Host "    üîß Configuration manuelle requise"
Write-Host "    üîß Plus de contr√¥le sur l'environnement"
Write-Host ""

do {
    $choice = Read-Host "Votre choix (1 ou 2)"
} while ($choice -notmatch "^[12]$")

Write-Host ""

if ($choice -eq "1") {
    Write-Host "üê≥ Installation avec Docker" -ForegroundColor Cyan
    Write-Host "============================" -ForegroundColor Cyan
    
    # V√©rifier si Docker est install√©
    try {
        $dockerVersion = docker --version
        Write-Host "‚úÖ Docker d√©tect√©: $dockerVersion" -ForegroundColor Green
    } catch {
        Write-Host "‚ùå Docker n'est pas install√© ou n'est pas d√©marr√©" -ForegroundColor Red
        Write-Host "üí° Installez Docker Desktop depuis https://www.docker.com/products/docker-desktop/" -ForegroundColor Yellow
        Write-Host "   Puis red√©marrez ce script." -ForegroundColor Yellow
        Read-Host "Appuyez sur Entr√©e pour continuer..."
        exit 1
    }
    
    # V√©rifier si Docker Compose est disponible
    try {
        $composeVersion = docker-compose --version
        Write-Host "‚úÖ Docker Compose d√©tect√©: $composeVersion" -ForegroundColor Green
    } catch {
        Write-Host "‚ùå Docker Compose n'est pas disponible" -ForegroundColor Red
        exit 1
    }
    
    Write-Host ""
    Write-Host "üöÄ Lancement de l'application avec Docker..." -ForegroundColor Yellow
    
    # Arr√™ter les conteneurs existants (si ils existent)
    Write-Host "üõë Arr√™t des conteneurs existants..." -ForegroundColor Gray
    docker-compose down 2>$null
    
    # Construire et lancer les conteneurs
    Write-Host "üî® Construction et d√©marrage des conteneurs..." -ForegroundColor Yellow
    docker-compose up -d --build
    
    if ($LASTEXITCODE -eq 0) {
        Write-Host ""
        Write-Host "‚è≥ Attente du d√©marrage des services..." -ForegroundColor Yellow
        Start-Sleep -Seconds 10
        
        Write-Host "üìä Initialisation de la base de donn√©es..." -ForegroundColor Yellow
        docker exec -it backend node initDb.js
        
        Write-Host ""
        Write-Host "üéâ Installation termin√©e avec succ√®s !" -ForegroundColor Green
        Write-Host "=======================================" -ForegroundColor Green
        Write-Host ""
        Write-Host "üåê Votre application est accessible sur :" -ForegroundColor White
        Write-Host "   Frontend: http://localhost:3000" -ForegroundColor Cyan
        Write-Host "   Backend API: http://localhost:3220" -ForegroundColor Cyan
        Write-Host ""
        Write-Host "üë§ Compte administrateur :" -ForegroundColor White
        Write-Host "   Email: admin@example.com" -ForegroundColor Yellow
        Write-Host "   Mot de passe: admin123" -ForegroundColor Yellow
        Write-Host ""
        Write-Host "üìã Commandes utiles :" -ForegroundColor White
        Write-Host "   Arr√™ter: docker-compose down" -ForegroundColor Gray
        Write-Host "   Logs: docker-compose logs -f" -ForegroundColor Gray
        Write-Host "   Red√©marrer: docker-compose restart" -ForegroundColor Gray
        
    } else {
        Write-Host "‚ùå Erreur lors du d√©marrage de Docker" -ForegroundColor Red
        Write-Host "üí° V√©rifiez que Docker Desktop est bien d√©marr√©" -ForegroundColor Yellow
        exit 1
    }
    
} else {
    Write-Host "üíª Installation locale" -ForegroundColor Cyan
    Write-Host "======================" -ForegroundColor Cyan
    
    # V√©rifier si Node.js est install√©
    try {
        $nodeVersion = node --version
        Write-Host "‚úÖ Node.js d√©tect√©: $nodeVersion" -ForegroundColor Green
    } catch {
        Write-Host "‚ùå Node.js n'est pas install√©" -ForegroundColor Red
        Write-Host "üí° Installez Node.js depuis https://nodejs.org/ (version 18+)" -ForegroundColor Yellow
        Read-Host "Appuyez sur Entr√©e pour continuer..."
        exit 1
    }
    
    # V√©rifier si MongoDB est disponible
    Write-Host "üîç V√©rification de MongoDB..." -ForegroundColor Yellow
    try {
        # Tenter de se connecter √† MongoDB local
        $mongoTest = mongosh --eval "db.version()" mongodb://localhost:27017/test 2>$null
        if ($LASTEXITCODE -eq 0) {
            Write-Host "‚úÖ MongoDB local d√©tect√© et accessible" -ForegroundColor Green
            $mongoLocal = $true
        } else {
            throw "MongoDB local non accessible"
        }
    } catch {
        Write-Host "‚ö†Ô∏è  MongoDB local non d√©tect√©" -ForegroundColor Yellow
        Write-Host ""
        Write-Host "Options MongoDB :" -ForegroundColor White
        Write-Host "1. Installer MongoDB localement" -ForegroundColor Blue
        Write-Host "2. Utiliser MongoDB Atlas (cloud)" -ForegroundColor Blue
        Write-Host "3. Continuer sans MongoDB (√† configurer manuellement)" -ForegroundColor Blue
        Write-Host ""
        
        do {
            $mongoChoice = Read-Host "Votre choix (1, 2 ou 3)"
        } while ($mongoChoice -notmatch "^[123]$")
        
        if ($mongoChoice -eq "1") {
            Write-Host "üí° Pour installer MongoDB localement :" -ForegroundColor Yellow
            Write-Host "   1. T√©l√©chargez MongoDB Community depuis: https://www.mongodb.com/try/download/community" -ForegroundColor Gray
            Write-Host "   2. Installez-le avec les options par d√©faut" -ForegroundColor Gray
            Write-Host "   3. Red√©marrez ce script" -ForegroundColor Gray
            Read-Host "Appuyez sur Entr√©e pour continuer..."
            exit 1
        } elseif ($mongoChoice -eq "2") {
            Write-Host "üí° Pour utiliser MongoDB Atlas :" -ForegroundColor Yellow
            Write-Host "   1. Cr√©ez un compte gratuit sur: https://www.mongodb.com/atlas" -ForegroundColor Gray
            Write-Host "   2. Cr√©ez un cluster gratuit" -ForegroundColor Gray
            Write-Host "   3. Notez l'URI de connexion" -ForegroundColor Gray
            Write-Host "   4. Vous devrez modifier le fichier BACKEND/.env apr√®s l'installation" -ForegroundColor Gray
        }
        $mongoLocal = $false
    }
    
    Write-Host ""
    Write-Host "üì¶ Configuration du Backend..." -ForegroundColor Yellow
    Set-Location BACKEND
    
    if (!(Test-Path .env)) {
        Copy-Item .env.example .env
        Write-Host "‚úÖ Fichier .env cr√©√© pour le Backend" -ForegroundColor Green
        
        if (!$mongoLocal) {
            Write-Host "‚ö†Ô∏è  N'oubliez pas de modifier BACKEND/.env avec votre URI MongoDB" -ForegroundColor Yellow
        }
    } else {
        Write-Host "‚ÑπÔ∏è  Fichier .env d√©j√† existant pour le Backend" -ForegroundColor Blue
    }
    
    Write-Host "üì¶ Installation des d√©pendances Backend..." -ForegroundColor Yellow
    npm install
    
    if ($LASTEXITCODE -ne 0) {
        Write-Host "‚ùå Erreur lors de l'installation des d√©pendances Backend" -ForegroundColor Red
        exit 1
    }
    
    Write-Host ""
    Write-Host "üé® Configuration du Frontend..." -ForegroundColor Yellow
    Set-Location ../FRONTEND
    
    if (!(Test-Path .env.local)) {
        Copy-Item .env.example .env.local
        Write-Host "‚úÖ Fichier .env.local cr√©√© pour le Frontend" -ForegroundColor Green
    } else {
        Write-Host "‚ÑπÔ∏è  Fichier .env.local d√©j√† existant pour le Frontend" -ForegroundColor Blue
    }
    
    Write-Host "üì¶ Installation des d√©pendances Frontend..." -ForegroundColor Yellow
    npm install
    
    if ($LASTEXITCODE -ne 0) {
        Write-Host "‚ùå Erreur lors de l'installation des d√©pendances Frontend" -ForegroundColor Red
        exit 1
    }
    
    Set-Location ..
    
    Write-Host ""
    Write-Host "üöÄ D√©marrage de l'application..." -ForegroundColor Yellow
    
    # Cr√©er des scripts de d√©marrage temporaires
    $backendScript = @"
Set-Location BACKEND
Write-Host "üîß D√©marrage du Backend..." -ForegroundColor Yellow
npm start
"@
    
    $frontendScript = @"
Start-Sleep -Seconds 5
Set-Location FRONTEND
Write-Host "üé® D√©marrage du Frontend..." -ForegroundColor Yellow
npm run dev
"@
    
    $initScript = @"
Start-Sleep -Seconds 10
Set-Location BACKEND
Write-Host "üìä Initialisation de la base de donn√©es..." -ForegroundColor Yellow
node initDb.js
Write-Host ""
Write-Host "üéâ Installation termin√©e !" -ForegroundColor Green
Write-Host "=========================" -ForegroundColor Green
Write-Host ""
Write-Host "üåê Votre application est accessible sur :" -ForegroundColor White
Write-Host "   Frontend: http://localhost:3000" -ForegroundColor Cyan
Write-Host "   Backend API: http://localhost:3220" -ForegroundColor Cyan
Write-Host ""
Write-Host "üë§ Compte administrateur :" -ForegroundColor White
Write-Host "   Email: admin@example.com" -ForegroundColor Yellow
Write-Host "   Mot de passe: admin123" -ForegroundColor Yellow
"@
    
    # Lancer les services en parall√®le
    Write-Host "üîß Lancement du Backend..." -ForegroundColor Yellow
    Start-Process powershell -ArgumentList "-NoExit", "-Command", $backendScript
    
    Write-Host "üé® Lancement du Frontend..." -ForegroundColor Yellow  
    Start-Process powershell -ArgumentList "-NoExit", "-Command", $frontendScript
    
    Write-Host "üìä Initialisation de la base de donn√©es..." -ForegroundColor Yellow
    Start-Process powershell -ArgumentList "-NoExit", "-Command", $initScript
    
    Write-Host ""
    Write-Host "‚úÖ Tous les services sont en cours de d√©marrage..." -ForegroundColor Green
    Write-Host "üì± Frontend sera disponible sur: http://localhost:3000" -ForegroundColor Cyan
    Write-Host "üîß Backend sera disponible sur: http://localhost:3220" -ForegroundColor Cyan
}

Read-Host "Appuyez sur Entr√©e pour fermer cette fen√™tre..."
